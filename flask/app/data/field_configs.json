{
    "gen_model_name": {
        "name": "model_name",
        "label": "Model Name",
        "type": "str",
        "tooltip": "Name of this model configuration.",
        "extra": [
            {
                "type": "attribute",
                "value": "required"
            },
            {
                "type": "disabled_if_default"
            }
        ]
    },
    "gen_output_mode": {
        "name": "output_mode",
        "label": "Output Mode",
        "type": "select",
        "tooltip": "Output mode to use.",
        "options": ["Detection", "Classification3", "Classification3Simplified", "Classification8"],
        "extra": [
            {
                "type": "attribute",
                "value": "required"
            }
        ]
    },
    "gen_model_mode": {
        "name": "model_mode",
        "label": "Model Mode",
        "type": "select",
        "tooltip": "Is this a single model or does it use ensemble learning?",
        "options": ["Single", "Ensemble"],
        "extra": [
            {
                "type": "attribute",
                "value": "required"
            },
            {
                "type": "attribute",
                "value": "onchange=\"modelModeChanged()\""
            }
        ]
    },
    "gen_combination_strategy": {
        "name": "combination_strategy",
        "label": "Combination Strategy",
        "type": "select",
        "tooltip": "Strategy used to combine models. Please find the Combination Strategy Help page in the navbar for more information.",
        "options": ["concat","add","subtract","multiply","max","min","dot","stacking","voting"],
        "extra": [
            {
                "type": "attribute",
                "value": "required"
            },
            {
                "type": "in_div"
            },
            {
                "type": "indent"
            }
        ]
    },

    "train_epochs": {
        "name": "epochs",
        "label": "Epochs",
        "type": "number",
        "tooltip": "Amount of training epochs.",
        "extra": [
            {
                "type": "attribute",
                "value": "required"
            },
            {
                "type": "attribute",
                "value": "min=1"
            },
            {
                "type": "default",
                "value": 1000
            }
        ]
    },
    "train_split_size": {
        "name": "split_size",
        "label": "Split Size",
        "type": "number",
        "tooltip": "Size of testing and validation splits.",
        "extra": [
            {
                "type": "attribute",
                "value": "min=0.01 max=0.5 step=0.01"
            }
        ]
    },
    "train_max_train": {
        "name": "max_train",
        "label": "Max Train",
        "type": "number",
        "tooltip": "Maximum amount of training items. Do not specify for infinite.",
        "extra": [
            {
                "type": "attribute",
                "value": "min=1"
            }
        ]
    },
    "train_apply_ontology_classes": {
        "name": "apply_ontology_classes",
        "label": "Apply Ontology Classes",
        "type": "bool",
        "tooltip": "Enable application of ontology classes."
    },
    "train_architectural_only": {
        "name": "architectural_only",
        "label": "Architectural Only",
        "type": "bool",
        "tooltip": "If specified, only architectural issues are used in training."
    },
    "train_class_balancer": {
        "name": "class_balancer",
        "label": "Class Balancer",
        "type": "select",
        "tooltip": "Enable class-balancing.",
        "options": ["", "class-weight", "upsample"]
    },
    "train_batch_size": {
        "name": "batch_size",
        "label": "Batch Size",
        "type": "number",
        "tooltip": "Specify the batch size used during training.",
        "extra": [
            {
                "type": "attribute",
                "value": "min=1"
            }
        ]
    },
    "train_use_early_stopping": {
        "name": "use_early_stopping",
        "label": "Use Early Stopping",
        "type": "bool",
        "tooltip": "Stop the training early in case of diminishing returns.",
        "extra": [
            {
                "type": "attribute",
                "value": "onchange=\"useEarlyStoppingChanged()\""
            }
        ]
    },
    "train_early_stopping_patience": {
        "name": "early_stopping_patience",
        "label": "Early stopping patience",
        "type": "number",
        "tooltip": "Patience used when using early stopping.",
        "extra": [
            {
                "type": "attribute",
                "value": "min=1"
            },
            {
                "type": "indent"
            }
        ]
    },
    "train_early_stopping_min_delta": {
        "name": "early_stopping_min_delta",
        "label": "Early stopping min delta",
        "type": "number",
        "tooltip": "Minimum delta used when using early stopping. One entry for every attribute used.",
        "extra": [
            {
                "type": "attribute",
                "value": "step=0.001 min=0.001"
            },
            {
                "type": "indent"
            }
        ]
    },
    "train_early_stopping_attribute": {
        "name": "early_stopping_attribute",
        "label": "Early stopping attribute",
        "type": "str",
        "tooltip": "Attribute(s) to use for early stopping (from the validation set).",
        "extra": [
            {
                "type": "indent"
            }
        ]
    },

    "class_classifier": {
        "name": "classifier",
        "label": "Classifier",
        "type": "select",
        "tooltip": "Classifier to use.",
        "options": [
            "FullyConnectedModel", 
            "LinearConv1Model", 
            "LinearRNNModel",
            "Bert"
        ],
        "extra": [
            {
                "type": "default",
                "value": "FullyConnectedModel"
            },
            {
                "type": "attribute",
                "value": "onchange=\"classifierChanged($(this))\""
            }
        ]
    },

    "hparam_number_of_hidden_layers": {
        "name": "number_of_hidden_layers",
        "label": "Number of Hidden Layers",
        "type": "number",
        "tooltip": "[min, max] = [0, 11] -- default = 1",
        "extra": [
            {
                "type": "default",
                "value": 1
            },
            {
                "type": "attribute",
                "value": "onchange=\"nrHiddenLayersChanged($(this))\""
            }
        ]
    },
    "hparam_hidden_layer_size": {
        "name": "hidden_layer_size",
        "label": "Size of Hidden Layer",
        "type": "number",
        "tooltip": "[min, max] = [2, 16384] -- default = 32",
        "extra": [
            {
                "type": "default",
                "value": 32
            },
            {
                "type": "indent"
            }
        ]
    },
    "hparam_optimizer": {
        "name": "optimizer",
        "label": "Optimizer",
        "type": "select",
        "tooltip": "Optimizer for the classifier. Default: adam.",
        "options": [
            "adam", "sgd"
        ],
        "extra": [
            {
                "type": "default",
                "value": "adam"
            },
            {
                "type": "attribute",
                "value": "onchange=\"optimizerChanged($(this))\""
            }
        ]
    },
    "hparam_optimizer_sgdvalue": {
        "name": "optimizer_sgdvalue",
        "label": "Optimizer SGD Momentum",
        "type": "number",
        "tooltip": "Float hyperparameter >= 0 that accelerates gradient descent in the relevant direction and dampens oscillations. Defaults to 0, i.e., vanilla gradient descent. See https://keras.io/api/optimizers/sgd/ for more information.",
        "extra": [
            {
                "type": "default",
                "value": 0.0
            },
            {
                "type": "attribute",
                "value": "step=any"
            },
            {
                "type": "indent"
            }
        ]
    },
    "hparam_loss": {
        "name": "loss",
        "label": "Loss",
        "type": "select",
        "tooltip": "Loss for the classifier. Default: crossentropy.",
        "options": [
            "crossentropy", "hinge"
        ],
        "extra": [
            {
                "type": "default",
                "value": "crossentropy"
            }
        ]
    },
    "hparam_use_trainable_embedding": {
        "name": "use_trainable_embedding",
        "label": "Use Trainable Embedding",
        "type": "bool",
        "tooltip": "Use trainable embedding for this classifier? Default: false."
    },
    "hparam_fully_connected_layer_size": {
        "name": "fully_connected_layer_size",
        "label": "Size of Fully Connected Layer",
        "type": "number",
        "tooltip": "[min, max] = [2, 16384] -- default = 32",
        "extra": [
            {
                "type": "default",
                "value": 32
            }
        ]
    },
    "hparam_filters": {
        "name": "filters",
        "label": "Filters",
        "type": "number",
        "tooltip": "[min, max] = [1, 64] -- default = 32",
        "extra": [
            {
                "type": "default",
                "value": 32
            }
        ]
    },
    "hparam_number_of_convolutions": {
        "name": "number_of_convolutions",
        "label": "Number of Convolutions",
        "type": "number",
        "tooltip": "[min, max] = [1, 11] -- default = 1",
        "extra": [
            {
                "type": "default",
                "value": 1
            },
            {
                "type": "attribute",
                "value": "onchange=\"nrOfConvChanged($(this))\""
            }
        ]
    },
    "hparam_kernel_size": {
        "name": "kernel_size",
        "label": "Size of Kernel",
        "type": "number",
        "tooltip": "[min, max] = [1, 512] -- default = 4",
        "extra": [
            {
                "type": "default",
                "value": 4
            },
            {
                "type": "indent"
            }
        ]
    },
    "hparam_bidirectional_layer_size": {
        "name": "bidirectional_layer_size",
        "label": "Size of the Bidirectional Layer",
        "type": "number",
        "tooltip": "[min, max] = [1, 128] -- default = 64",
        "extra": [
            {
                "type": "default",
                "value": 64
            }
        ]
    },
    "hparam_number_of_hidden_layers_rnn": {
        "name": "number_of_hidden_layers",
        "label": "Number of Hidden Layers",
        "type": "number",
        "tooltip": "[min, max] = [0, 5] -- default = 1",
        "extra": [
            {
                "type": "default",
                "value": 1
            },
            {
                "type": "attribute",
                "value": "onchange=\"nrHiddenLayersChanged($(this))\""
            }
        ]
    },

    "prepro_inmode": {
        "name": "inmode",
        "label": "Input Mode",
        "type": "select",
        "tooltip": "Feature Generator to use.",
        "options": [
            "BOWFrequency",
            "BOWNormalized",
            "Doc2Vec",
            "Metadata",
            "OntologyFeatures",
            "TfidfGenerator",
            "Word2Vec1D",
            "Bert"
        ],
        "extra": [
            {
                "type": "default",
                "value": "BOWFrequency"
            },
            {
                "type": "attribute",
                "value": "onchange=\"inmodeChanged($(this))\""
            }
        ]
    },
    "param_vector_length": {
        "name": "vector_length",
        "label": "Vector Length",
        "type": "number",
        "tooltip": "Specify the length of the output vector",
        "extra": [
            {
                "type": "default",
                "value": 400
            },
            {
                "type": "attribute",
                "value": "required"
            }
        ]
    },
    "param_min_count": {
        "name": "min_count",
        "label": "Minimum Count",
        "type": "number",
        "tooltip": "Minimum occurrence for a word to be in the Word2Vec",
        "extra": [
            {
                "type": "default",
                "value": 0
            },
            {
                "type": "attribute",
                "value": "required"
            }
        ]
    },
    "param_max_len": {
        "name": "max_len",
        "label": "Maximum Length",
        "type": "number",
        "tooltip": "Words limit of the issue text",
        "extra": [
            {
                "type": "default",
                "value": 1000
            },
            {
                "type": "attribute",
                "value": "required"
            }
        ]
    },
    "param_disable_lowercase": {
        "name": "disable_lowercase",
        "label": "Disable Lowercase",
        "type": "bool",
        "tooltip": "Transform words to lowercase"
    },
    "param_disable_stopwords": {
        "name": "disable_stopwords",
        "label": "Disable Stopwords",
        "type": "bool",
        "tooltip": "Remove stopwords from text"
    },
    "param_use_stemming": {
        "name": "use_stemming",
        "label": "Use Stemming",
        "type": "bool",
        "tooltip": "Stem the words in the text"
    },
    "param_use_lemmatization": {
        "name": "use_lemmatization",
        "label": "Use Lemmatization",
        "type": "bool",
        "tooltip": "Use lemmatization on words in the text"
    },
    "param_use_pos": {
        "name": "use_pos",
        "label": "Use POS",
        "type": "bool",
        "tooltip": "Enhance words in the text with part of speech information"
    },
    "param_class_limit": {
        "name": "class_limit",
        "label": "Class Limit",
        "type": "number",
        "tooltip": "Limit the amount of items per class"
    },
    "param_min_doc_count": {
        "name": "min_doc_count",
        "label": "Minimum Document Count",
        "type": "number",
        "tooltip": "Minimum number of document occurrences for a word to be included"
    },

    "ens_classifier_count": {
        "name": "classifier_count",
        "label": "Amount of Ensemble Classifiers",
        "type": "number",
        "tooltip": "Amount of Ensemble Classifiers to combine",
        "extra": [
            {
                "type": "default",
                "value": 2
            },
            {
                "type": "attribute",
                "value": "required onchange=\"ensClassCountChanged($(this))\""
            }
        ]
    }
}